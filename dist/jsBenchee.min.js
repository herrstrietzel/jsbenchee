!function(e){"use strict";async function t(e=[],t="",r=25,a=!0,i={},l="",o=""){let c={name:t,average:0,lowest:0,highest:0,timings:[]},m=document.getElementById(l),u=i[l],d=[],g=[],p=[],h="",$="",f="",w=0;if(!u){for(let t=0,n=e.length;n&&t<n;t++){let n=e[t],r=n.split(".")?.slice(-1)[0]||null,i=!!r&&("js"===r||"cjs"===r||"mjs"===r),l=n.startsWith("https://")||n.startsWith("http://")||n.startsWith("//"),o=0;n.includes("import")?p.push(n):i||l?d.push(n):(a&&(o=s(n),o>1&&(n="const jsBencheeHarmful=true")),g.push(n))}h=await n(p,l,"module",a,o),$=await n(d,l,"external",a,o),f=await n(g,l,"",a,o)}const y=async(e="",t="",n="",s={},r="")=>{m||(m=document.createElement("iframe"),m.id=r,m.style.display="none",m.sandbox="allow-scripts",document.body.append(m));let a="";s[r]?a=s[r]:(a=`data:text/html,${encodeURIComponent(`<!DOCTYPE html><html><head><meta charset="UTF-8">${t}</head>\n            <body>${e}${n}</body></html>`)}`,s[r]=a),m.src=a};return new Promise((e=>{window.addEventListener("message",(function t(n){let{benchmarkResult:s,error:a,value:u}=n.data,d=n.data.hasOwnProperty("benchmarkResult"),g=n.data.ID===l;if(a)c.error=a,e(c);else if(g&&n.data&&d)if(o&&u&&(u="object"==typeof u?Array.isArray(u)?u:JSON.stringify(u):u,c.value=u),c.timings.push(s),w++,w<r)y(h,$,f,i,l);else{window.removeEventListener("message",t);let n=[...c.timings].sort(((e,t)=>e-t));c.lowest=+n[0].toFixed(3);let s=n.reduce(((e,t)=>e+t),0)/n.length;c.average=s;let r=n.reverse(),a=r[0];a>2*s&&(c.timings.splice(c.timings.indexOf(a),1),r.shift(),a=r[0],s=c.timings.reduce(((e,t)=>e+t),0)/c.timings.length,c.average=+s.toFixed(9)),c.highest=+a.toFixed(3),c.timings=[...c.timings],e(c),m.contentWindow.location.replace("about:blank"),performance.clearResourceTimings(),performance.clearMeasures(),m.remove()}})),y(h,$,f,i,l)}))}async function n(e=[],t="",n="",r=!0,a=""){const i=async(e,t=!0)=>{let n="",r=await fetch(e);if(r.ok){let e=await r.text();t&&s(e)>1&&(e="const jsBencheeHarmful=true"),n=`data:text/javascript,${encodeURIComponent(e)}`}return n},l=async(e,t=!0)=>{let n=/import\s+(.*?)\s+from\s+['"](.*?)['"]/g,s=Array.from(e.matchAll(n)),r=[];for(let e=0,n=s.length;n&&e<n;e++){let[n,a,l]=s[e],o=await i(l,t),c=n.replaceAll(l,o);r.push(`${c}`)}return{imports:r,body:e.replace(n,"").replaceAll(";","").trim()}};let o="",c=n?"":'"use strict";\n',m="",u="",d="",g=n?`type="${n}" `:n;if(!e.length)return"";if(n&&"external"!==n)for(let t=0;t<e.length;t++){let n=e[t],s=await l(n,r),{imports:a,body:i}=s;u+=a.length?a.join("\n"):"",m+=i?i+"\n":""}else if(n&&"external"===n)for(let t=0;t<e.length;t++){let n=e[t];d+=`<script src="${await i(n,r)}" defer><\/script>\n`}else m=e.join("\n");let p=a?`if(typeof ${a} !== 'undefined'){\n        returnValue = ${a} ? ${a} : "";\n    }\n`:"",h=function(e){return[/\bawait\b/,/\basync\b/,/\.then\(/,/\.catch\(/,/\.finally\(/,/new\s+Promise\(/i,/fetch\(/,/setTimeout\(/,/setInterval\(/,/requestAnimationFrame\(/i].some((t=>t.test(e)))}(m);return h&&(m=`\n        const pendingPromises = new Set();\n        const OriginalPromise = window.Promise;\n        \n        window.Promise = class TrackedPromise extends OriginalPromise {\n            constructor(executor) {\n                super((resolve, reject) => {\n                    executor(\n                        value => { pendingPromises.delete(this); resolve(value); },\n                        error => { pendingPromises.delete(this); reject(error); }\n                    );\n                });\n                pendingPromises.add(this);\n            }\n        };\n        ${m}\n\n        delay = 0.5\n        // Wait for all promises\n        while (pendingPromises.size > 0) {\n            await Promise.race(Array.from(pendingPromises));\n            await new Promise(r => setTimeout(r, delay));\n        }\n        \n        // Restore original Promise\n        window.Promise = OriginalPromise;\n        `),o+=`\n    ${d}\n    <script ${g}>\n    ${u}\n    ${c}\n    const iframeID = '${t}';\n    window.alert = () => {};\n    \n    window.addEventListener('load', async () => {\n        let returnValue = '', t0=0, t1=0\n        try {\n            let delay = 0;\n            t0= performance.now();\n            // Execute script\n            ${m};\n            t1 = performance.now() - t0-delay;\n\n            ${p}\n            parent.postMessage({ benchmarkResult: t1, value:returnValue, ID:iframeID}, '*');\n\n        } catch (err) {\n            parent.postMessage({ error: err.message, ID: iframeID }, '*');\n        }\n    });\n    <\/script>`,o}function s(e){let t=0;const n={};return[{regex:/eval\s*\(/g,score:1},{regex:/new\s+Function\s*\(/g,score:1},{regex:/setTimeout\s*\(/g,score:.1},{regex:/setInterval\s*\(/g,score:.1},{regex:/document\.write\s*\(/g,score:.5},{regex:/innerHTML\s*=/g,score:.3}].forEach((({regex:s,score:r})=>{const a=[...e.matchAll(s)];a.length&&(n[s]=a.length,t+=a.length*r)})),(n[/eval\s*\(/g]||n[/new\s+Function\s*\(/g])&&n[/setTimeout\s*\(/g]&&(t+=2),(n[/eval\s*\(/g]||n[/new\s+Function\s*\(/g])&&(n[/document\.write\s*\(/g]||n[/innerHTML\s*=/g])&&(t+=1),+t.toFixed(2)}var r=function({tests:e=[],iterations:n=25,target:s="",render:r=!0,agentDetection:a=!1,security:i=!0,multitask:l=!0,includeColumns:o=[],addCSS:c=!0,returnVar:m=""}={}){this.settings={tests:e,iterations:n,target:s,render:r,agentDetection:a,includeColumns:o,multitask:l,security:i,addCSS:c,returnVar:m};const u="jsBenchee",d=a?function(){let e="",t=[],n="",s="";if(navigator.userAgentData)({brands:t,platform:s}=navigator.userAgentData),n=t.slice(-1)[0],e=`${n.brand}/${n.version} ${s}`;else if(navigator.userAgent){let t=navigator.userAgent.split(" ");n=t.slice(-1)[0],s=t[1].replace(/\(/g,""),e=`${n} ${s}`}return e}():"";e.map((e=>{if(!e.name){let t=e.scripts.filter((e=>e.includes("http")));try{if(t.length){let n=t[0].match(/(https?:\/\/[^\s]+)/)[0].split("/").filter(Boolean).slice(2);e.name=n.sort(((e,t)=>t.length-e.length))[0]}}catch{e.name="undefined"}}}));let g={results:[],names:[...new Set(e.map(((e,t)=>e.name)))],settings:this.settings},p={};return new Promise((async h=>{c&&r&&await async function(){let e=(()=>{try{let e=performance.getEntries().slice(1)[0].name.split("/").slice(0,-1).join("/");if(e)return e;let t=(new Error).stack.split("\n"),n=t[1]||t[2];return n?n.match(/(https?:\/\/[^\s]+)/)[1].split("/").slice(0,-1).join("/"):null}catch(e){return null}})();e.includes("dist")||(e+="/dist");let t=e+"/jsBenchee.css",n=await fetch(t);if(n.ok){let e=await n.text(),t=document.getElementById("jsBencheeStyles");t||(t=document.createElement("style"),t.textContent=e,document.head.append(t))}}(),await(async()=>{let c,h,$;if(r){if(({reportWrap:c,resultWrap:h,benchmarkMD:$}=((e="",t=0,n=!1,s=!1,r=[])=>{let a=`<strong>Iterations:</strong> ${t} Multitask:</strong>${s}`;a=n?`<strong>Agent:</strong> ${e} <strong>`+a:a;let i=r.map((e=>`»${e.name}«`)).join(", "),l=`\n        <div class="${u}-wrap">\n            <p class="${u}-heading">Benchmarking <strong>${i}</strong>\n                <span class="${u}-progress">– please wait <span class="${u}-progress-spinner"></span>\n            </span>\n            </p>\n            <div class="${u}-section ${u}-summary">\n            <p class="${u}-p"> ${a}</p>\n            <p class="${u}-p"><strong>Note:</strong> It is recommended to close them while running benchmark test for more realistic results.</p>\n            </div>\n            <div class="${u}-section ${u}-results"></div>\n            <details class="${u}-details ${u}-markdown">\n                <summary class="j${u}-summary">MD output</summary>\n                <textarea class="${u}-textarea" readonly></textarea>\n            </details>\n        </div>`,o=(new DOMParser).parseFromString(l,"text/html").querySelector(`.${u}-wrap`),c=o.querySelector(`.${u}-results`),m=o.querySelector(`.${u}-textarea`);return{reportWrap:o,resultWrap:c,benchmarkMD:m}})(d,n,a,l,e)),!(s=s&&r?document.querySelector(`${s}`):null)){let e=document.createElement("article");e.id="jsBencheeReport",s=e,document.body.append(s)}s.append(c)}const f=e.map((()=>crypto.randomUUID()));if(l){let s=e.map(((e,s)=>t(e.scripts,e.name,n,i,p,f[s],m).catch((t=>({name:e.name,error:t.message,average:0,iterations:[],results:[]})))));(await Promise.allSettled(s)).forEach((e=>{let t=e.value;g.results.push(t)}))}else for(let s=0,r=e.length;r&&s<r;s++){const{scripts:r,name:a}=e[s],l=await t(r,a,n,i,p,f[s],m);g.results.push(l)}let{html:w,md:y}=function(e,t=[]){const n="jsBenchee";let{results:s,agent:r="",names:a,iterations:i,multipass:l,multitask:o}=e;s.sort(((e,t)=>e.average-t.average));let c="";0===s[0].average&&(c+=`»${s[0].name}« could not be benchmarked. Please check the syntax for errors.`,s.shift());let m="";m+=`<table class="${n}-table">`,t.length&&(s=((e,t=[])=>t.length?e.map((e=>{const n={};return(t&&t.length?t:Object.keys(e)).forEach((t=>{e.hasOwnProperty(t)&&(n[t]=e[t])})),n})):e)(s,t)),m+=`<thead class="${n}-thead">\n<tr class="${n}-tr">`;let u=Object.keys(s[0]);m+=u.map((e=>`<th class="${n}-th">${e}</th>`)).join("\n"),m+="</tr>\n</thead>";let d="";d+=`**Scripts:** ${a.join(", ")}  \n`,d+=r?`**Agent:** ${r} `:"",d+=l?`**Multipass:** ${l} `:"",d+=o?`**Multitask:** ${o} `:"",d+=`**Iterations:** ${i} \n\n`,d+="| "+u.map(((e,t)=>`${e} | `)).join(" ")+"\n",d+="| "+u.map(((e,t)=>0===t?":--- | ":"---: | ")).join(" ")+"\n",m+=`<tbody class="${n}-tbody">`;let g=Object.keys(s[0]);s.forEach(((e,t)=>{m+=`<tr class="${n}-tr">`,d+="| ";for(let t=0;t<g.length;t++){let s=g[t],r=e[s];r=Array.isArray(r)?r.map((e=>e&&!isNaN(e)?+e.toFixed(3):e)).join(", "):r,!isNaN(r)&&r&&(r="average"===s?+r.toFixed(1):+r.toFixed(3)),m+=`<td class="${n}-td  ${n}-td-${s}"><span class="${n}-td-label">${s}:</span> <span class="${n}-td-value ${n}-td-value-${s}">${r}</span></td>`,d+=` ${r} | `}m+="</tr>",d+="\n"})),m+="</tbody></table>",s.sort(((e,t)=>e.average-t.average));let p=s[0],h=+p.average,$=s.length,f=`<ul class="${n}-ul">`,w="";for(let e=0;$&&e<$;e++){let t=s[e],r=1,a=0,{name:i,average:l,timings:o}=t,c="",m="";0===e?c=$>1?`»${p.name}« is the fastest executing with an average of ${h.toFixed(3)} ms`:`»${p.name}« is executing with an average of ${h.toFixed(3)} ms`:(r=+(l/h).toFixed(3),a=+Math.abs(h-l).toFixed(3),a<.3&&h<1&&(m="Not significant – differences are also caused by browser performance fluctuations."),c=`»${i}« is ~ ${r} times / ~ ${+(100*(r-1)).toFixed(0)}% / ${a}ms slower than »${p.name}«. ${m}`),f+=`<li class="${n}-li">${c}</li>`,w+=`* ${c}${m}  \n`}return c&&(f+=`<li class="${n}-li">${c}</li>`,w+=`* ${c}  \n`),f+="</ul>",m+=f,d+="\n \n"+w,{html:m,md:d}}(g,o);g.resultMd=y,g.resultHtml=w,g.resultsJSON=JSON.stringify({agent:d,iterations:n,results:g.results}),r&&(c.classList.add(`${u}-completed`),h.insertAdjacentHTML("beforeend",w),$.value="\n"+y),p={}})(),h(g)}))};"undefined"!=typeof window&&(window.jsBenchee=r),e.jsBenchee=r}(this.jsBenchee=this.jsBenchee||{});
